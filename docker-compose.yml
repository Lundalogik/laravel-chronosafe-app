version: '3'
networks:
  netforms:
volumes:
  forms-db:
services:
  ngnix:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - 8081:80
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - php
      - db
    networks:
      - netforms
  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - .:/var/www/html:delegated
    networks:
      - netforms
  npm:
    image: node:14.18.2
    container_name: npm
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - netforms
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['composer']
    networks:
      - netforms
  db:
    platform: linux/amd64
    image: mysql:5.7
    container_name: db
    volumes:
      - forms-db:/var/lib/mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - netforms
  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - .:/var/www/html
    depends_on:
      - db
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - netforms
